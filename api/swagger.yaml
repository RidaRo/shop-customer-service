openapi: "3.0.3"
info:
  title: Shop Customer Service
  description: Api for the shop service customer side
  version: "1.0.0"

servers:
  - url: https://api.server.test/v1

paths:
  /items:
    get:
      summary: Gets all avvalible products by query
      tags:
        - Product Search
      parameters:
        - name: query
          description: Search query.
          in: query
          required: false
          schema:
            type: string
        - name: pageNumber
          description: Page. 0 is starting point
          in: query
          required: false
          schema:
            type: integer
        - name: pageSize
          description: Size of page
          in: query
          required: false
          schema:
            type: integer
      responses:
        200:
          description: Sucsessful pull of items info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/items'
    post:
      tags:
        - Product Search
      summary: Adds products to cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/item'
      responses:
        200:
          description: Returns values of sucsessfuly added item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        400:
          description: Bad requst - invalid values in request body
        404:
          description: Nothing was found

  /cart:
    get:
      summary: Get all items insede cart
      tags:
        - Users cart
      responses:
        200:
          description: Sucsessful pull of items in the cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/items'
    post:
      summary: Order items in the cart
      tags:
        - Users cart
      responses:
        200:
          description: Sucsessful order of items in the cart
        400:
          description: Bad requst - invalid values in request body
        404:
          description: Nothing was found
    put:
      tags:
        - Users cart
      summary: Update amount spacific product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/item'
      responses:
        200:
          description: Returns values of sucsessfuly updayed item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        400:
          description: Bad requst - invalid values in request body
    delete:
      tags:
        - Users cart
      summary: Deletes spacific product from cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/item'
      responses:
        200:
          description: Returns values of sucsessfuly deleted item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        400:
          description: Bad requst - invalid values in request body
        404:
          description: Nothing was found


  /user:
    get:
      summary: Get info of user
      tags:
        - Users profile
      responses:
        200:
          description: Sucsessful pull of user info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        404:
          description: Nothing was found

components:
  schemas:
    items:
      type: array
      items:
        $ref: '#/components/schemas/item'
    item:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "broom"
        price:
          type: integer
          example: 100
        quantati:
          type: integer
          example: 10
      required:
        - id
        - name
        - price
        - quantati
    user:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Bob"
        amount of orders:
          type: integer
          example: 2
          required:
            - name
            - amount of orders